flow-content {
  --anchor-decoration: underline;
  --flow-font: var(--font-body);
  --flow-inset: var(--font-size-m);
  --flow-space: 1em;
  --flow-measure: var(--measure);

  display: block;
  font: var(--flow-font);
  overflow-wrap: anywhere;

  &[data-font="lede"] {
    --flow-font: var(--font-lede);
  }

  > * {
    max-inline-size: var(--flow-measure);
  }

  > * + * {
    margin-block-start: var(--flow-space);
  }

  hr {
    border-block-end: var(--border-width-thick) solid var(--color-primary);
    inline-size: 33%;
    margin-block: calc(var(--flow-space) * 2);
    margin-inline-start: 0;
  }

  caption,
  figcaption {
    color: var(--color-on-surface-variant);
    font: var(--font-caption);

    * + * {
      margin-block-start: calc(var(--flow-space) / 2);
    }
  }

  figure {
    display: flex;
    flex-direction: column;
    gap: var(--flow-space) var(--space-gutter);
    margin-block-start: calc(var(--flow-space) * 3);
  }

  p,
  dl,
  ol,
  ul {
    font-variant: oldstyle-nums;
    word-spacing: var(--word-spacing);
  }

  blockquote {
    margin-inline-start: 0;
    padding-inline-start: var(--flow-inset, 1em);
    position: relative;

    /* Align border with quoteâ€™s baseline */
    &::before {
      border-inline-start: var(--border-width-thick) solid var(--color-primary);
      content: "";
      inset-block: 0.4em 0.3em;
      inset-inline-start: 0;
      position: absolute;
    }
  }

  pre {
    background-color: var(--color-inverse-surface);
    color: var(--color-on-inverse-surface);
    display: block;
    margin-inline-start: calc(var(--space-gutter) * -1);
    max-inline-size: unset;
    padding: var(--space-inset);
    padding-inline-start: var(--space-gutter);
  }

  table {
    @media (--upto-medium-viewport) {
      display: block;
      max-inline-size: min-content;
      overflow-x: scroll;
      scrollbar-color: var(--color-shadow);
      scrollbar-width: thin;
      white-space: nowrap;
    }
  }

  th,
  td {
    padding-block: var(--space-inset);
  }

  tbody th,
  tbody td {
    border-block-start: var(--border-width-thin) solid var(--color-outline);
  }

  th:not(:last-child),
  td:not(:last-child) {
    padding-inline-end: var(--space-gutter);
  }

  [style^="--chart-width"] {
    background: linear-gradient(
      to right,
      var(--color-highlight) var(--chart-width),
      transparent var(--chart-width)
    );
    display: inline-block;
    inline-size: 100%;
    margin-inline-start: calc(var(--space-inline) * -1);
    padding-inline-start: var(--space-inline);
    position: relative;
  }

  :is(pre, table):not(:first-child) {
    margin-block-start: calc(var(--flow-space) * 2);
  }

  :is(figcaption, pre, table) {
    margin-block-end: calc(var(--flow-space) * 2);
  }

  h2 {
    font: var(--font-heading);

    &:not(:first-child) {
      margin-block-start: calc(var(--flow-space) * 2);
    }
  }

  h3 {
    font: var(--font-subhead);
    margin-block-start: calc(var(--flow-space) * 2);
  }

  h4 {
    color: var(--color-primary-on-surface);
    margin-block: calc(var(--flow-space) * 2) calc(var(--flow-space) * -0.5);
  }

  p > img:only-of-type:first-of-type,
  p > picture:only-of-type:first-of-type {
    float: inline-end;
    inline-size: clamp(20%, 12rem, 50%);
    margin-block-end: var(--flow-space);
    margin-inline-start: var(--space-gutter);
  }

  ol,
  ul {
    --flow-inset: calc(var(--flow-inset) * 2);
  }

  li:has(p) {
    margin-block-start: calc(var(--flow-space) * 0.5);
  }

  strong {
    font-weight: 500;
  }

  :not(pre) code {
    background-color: var(--color-surface);
  }

  :not(pre) code,
  samp {
    padding: var(--text-spacing);
  }

  ul:has(li > *:is(a > img, figure, img, picture):only-child) {
    --gallery-columns: var(--columns, 1);

    align-items: start;
    display: grid;
    grid-template-columns: 1fr;
    max-inline-size: unset;
    padding-inline: 0;

    @media (--from-medium-viewport) {
      grid-template-columns: repeat(var(--gallery-columns), 1fr);
    }

    &:has(* + *) {
      --gallery-columns: var(--columns, 2);
    }

    &:has(* + * + *) {
      --gallery-columns: var(--columns, 3);
    }

    &:has(* + * + * + *) {
      --gallery-columns: var(--columns, 4);
    }

    &:has(img[src*="_screenshot"]) {
      margin-inline: calc(var(--space-gutter) * -1);

      figcaption {
        padding-inline: var(--space-gutter);
      }
    }

    &:not(:has(img[src*="_screenshot"])) {
      gap: var(--space-inline);
    }

    img:not([src*="_screenshot"]) {
      inline-size: auto;
      max-block-size: 90vh;
      max-inline-size: 100%;
    }

    li {
      display: flex;
      justify-content: center;
      overflow: hidden;

      &:has(img.u-photo) {
        background-color: var(--color-inverse-surface);
        border-radius: var(--border-radius-large);
        color: var(--color-on-inverse-surface);
      }
    }
  }
}
